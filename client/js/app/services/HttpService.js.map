{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;IAAMA,W;;;;;;;;;AAEJ;kCACcC,G,EAAK;AACjB;AACA,UAAI,CAACA,IAAIC,EAAT,EAAa;AACX,cAAM,IAAIC,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACD;AACD,aAAOH,GAAP;AACD;;AAED;;;;wBACII,G,EAAK;AAAA;;AACP;AACA;AACA,aAAOC,MAAMD,GAAN,EACJE,IADI,CACC;AAAA,eAAO,MAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,OADD,EAEJM,IAFI,CAEC;AAAA,eAAON,IAAIQ,IAAJ,EAAP;AAAA,OAFD,CAAP;AAGD;;;yBAEIJ,G,EAAKK,I,EAAM;AAAA;;AAEd,aAAOJ,MAAMD,GAAN,EAAW;AAChBM,iBAAS,EAAE,gBAAgB,kBAAlB,EADO;AAEhBC,gBAAQ,MAFQ;AAGhBC,cAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHU,OAAX,EAIJH,IAJI,CAIC;AAAA,eAAO,OAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,OAJD,CAAP;AAMD","file":"HttpService.js","sourcesContent":["class HttpService {\r\n\r\n  //vamos criar uma função para tratar os erros\r\n  _handleErrors(res) {\r\n    //a resposta do fatch tem o parâmetro ok se recebeu um código de sucesso(200-226)\r\n    if (!res.ok) {\r\n      throw new Error(res.statusText)\r\n    }\r\n    return res;\r\n  }\r\n\r\n  //vamos usar o o fetch uma API de buscas em requisições Ajax\r\n  get(url) {\r\n    //testamos erro mudando a url\r\n    //url = 'xxx'\r\n    return fetch(url)\r\n      .then(res => this._handleErrors(res))\r\n      .then(res => res.json());\r\n  }\r\n\r\n  post(url, dado) {\r\n\r\n    return fetch(url, {\r\n      headers: { 'Content-type': 'application/json' },\r\n      method: 'post',\r\n      body: JSON.stringify(dado),\r\n    }).then(res => this._handleErrors(res))\r\n\r\n  }\r\n\r\n}"]}