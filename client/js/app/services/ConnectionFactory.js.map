{"version":3,"sources":["../../app-es6/services/ConnectionFactory.js"],"names":["dbName","stores","version","connection","close","ConnectionFactory","Error","Promise","resolve","reject","openRequest","window","indexedDB","open","onupgradeneeded","e","_createStores","target","result","onsuccess","bind","onerror","console","log","error","name","conexao","forEach","store","objectStoreNames","contains","deleteObjectStore","createObjectStore","autoIncrement"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAMA,S,GAAS,Y;AACTC,S,GAAS,CAAC,aAAD,C;AACTC,U,GAAU,C;AAEZC,a,GAAa,I;AACbC,Q,GAAQ,I;;gCAECC,iB;AAEZ,iCAAc;AAAA;;AACb,WAAM,IAAIC,KAAJ,CAAU,sDAAV,CAAN;AACA;;;;qCAEsB;AAAA;;AACtB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvC,WAAIC,cAAcC,OAAOC,SAAP,CAAiBC,IAAjB,CAAsBb,MAAtB,EAA8BE,OAA9B,CAAlB;;AAEAQ,mBAAYI,eAAZ,GAA8B,UAACC,CAAD;AAAA,eAAO,MAAKC,aAAL,CAAmBD,EAAEE,MAAF,CAASC,MAA5B,CAAP;AAAA,QAA9B;;AAEAR,mBAAYS,SAAZ,GAAwB,UAACJ,CAAD,EAAO;AAC9B,YAAI,CAACZ,UAAL,EAAiB;AAChBA,sBAAaY,EAAEE,MAAF,CAASC,MAAtB;AACAd,iBAAQD,WAAWC,KAAX,CAAiBgB,IAAjB,CAAsBjB,UAAtB,CAAR;AACAA,oBAAWC,KAAX,GAAmB,YAAY;AAC9B,gBAAM,IAAIE,KAAJ,CAAU,4CAAV,CAAN;AACA,UAFD;AAGA;AACDE,gBAAQL,UAAR;AACA,QATD;;AAWAO,mBAAYW,OAAZ,GAAsB,UAACN,CAAD,EAAO;AAC5BO,gBAAQC,GAAR,CAAYR,EAAEE,MAAF,CAASO,KAArB;AACAf,eAAOM,EAAEE,MAAF,CAASO,KAAT,CAAeC,IAAtB;AACA,QAHD;AAIA,OApBM,CAAP;AAqBA;;;uCAEwB;AACxB,UAAItB,UAAJ,EAAgB;AACfC;AACAD,oBAAa,IAAb;AACA;AACD;;;mCAEoBuB,O,EAAS;AAC7BzB,aAAO0B,OAAP,CAAe,UAACC,KAAD,EAAW;AACzB,WAAIF,QAAQG,gBAAR,CAAyBC,QAAzB,CAAkCF,KAAlC,CAAJ,EAA8C;AAC7CF,gBAAQK,iBAAR,CAA0BH,KAA1B;AACA;AACDF,eAAQM,iBAAR,CAA0BJ,KAA1B,EAAiC,EAAEK,eAAe,IAAjB,EAAjC;AACA,OALD;AAMA","file":"ConnectionFactory.js","sourcesContent":["const dbName = \"aluraframe\";\r\nconst stores = [\"negociacoes\"];\r\nconst version = 4;\r\n\r\nlet connection = null;\r\nlet close = null;\r\n\r\nexport class ConnectionFactory {\r\n\r\n\tconstructor() {\r\n\t\tthrow new Error(\"Não é possível criar instâncias de ConnectionFactory\");\r\n\t}\r\n\r\n\tstatic getConnection() {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tlet openRequest = window.indexedDB.open(dbName, version);\r\n\r\n\t\t\topenRequest.onupgradeneeded = (e) => this._createStores(e.target.result);\r\n\r\n\t\t\topenRequest.onsuccess = (e) => {\r\n\t\t\t\tif (!connection) {\r\n\t\t\t\t\tconnection = e.target.result;\r\n\t\t\t\t\tclose = connection.close.bind(connection);\r\n\t\t\t\t\tconnection.close = function () {\r\n\t\t\t\t\t\tthrow new Error('Você não pode fechar diretamente a conexão')\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tresolve(connection);\r\n\t\t\t}\r\n\r\n\t\t\topenRequest.onerror = (e) => {\r\n\t\t\t\tconsole.log(e.target.error);\r\n\t\t\t\treject(e.target.error.name);\r\n\t\t\t};\r\n\t\t});\r\n\t}\r\n\r\n\tstatic closeConnection() {\r\n\t\tif (connection) {\r\n\t\t\tclose();\r\n\t\t\tconnection = null;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic _createStores(conexao) {\r\n\t\tstores.forEach((store) => {\r\n\t\t\tif (conexao.objectStoreNames.contains(store)) {\r\n\t\t\t\tconexao.deleteObjectStore(store);\r\n\t\t\t}\r\n\t\t\tconexao.createObjectStore(store, { autoIncrement: true });\r\n\t\t});\r\n\t}\r\n}"]}