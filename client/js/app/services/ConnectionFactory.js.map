{"version":3,"sources":["../../app-es6/services/ConnectionFactory.js"],"names":["ConnectionFactory","dbName","stores","version","connection","close","Error","Promise","resolve","reject","openRequest","window","indexedDB","open","onupgradeneeded","e","_createStores","target","result","onsuccess","bind","onerror","console","log","error","name","conexao","forEach","store","objectStoreNames","contains","deleteObjectStore","createObjectStore","autoIncrement"],"mappings":";;;;;;AAAA,IAAIA,oBAAqB,YAAY;;AAEpC,KAAMC,SAAS,YAAf;AACA,KAAMC,SAAS,CAAC,aAAD,CAAf;AACA,KAAMC,UAAU,CAAhB;;AAEA,KAAIC,aAAa,IAAjB;AACA,KAAIC,QAAQ,IAAZ;;AAEA;AAEC,+BAAc;AAAA;;AACb,SAAM,IAAIC,KAAJ,CAAU,sDAAV,CAAN;AACA;;AAJF;AAAA;AAAA,mCAMwB;AAAA;;AACtB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvC,SAAIC,cAAcC,OAAOC,SAAP,CAAiBC,IAAjB,CAAsBZ,MAAtB,EAA8BE,OAA9B,CAAlB;;AAEAO,iBAAYI,eAAZ,GAA8B,UAACC,CAAD;AAAA,aAAO,MAAKC,aAAL,CAAmBD,EAAEE,MAAF,CAASC,MAA5B,CAAP;AAAA,MAA9B;;AAEAR,iBAAYS,SAAZ,GAAwB,UAACJ,CAAD,EAAO;AAC9B,UAAI,CAACX,UAAL,EAAiB;AAChBA,oBAAaW,EAAEE,MAAF,CAASC,MAAtB;AACAb,eAAQD,WAAWC,KAAX,CAAiBe,IAAjB,CAAsBhB,UAAtB,CAAR;AACAA,kBAAWC,KAAX,GAAmB,YAAU;AAC5B,cAAM,IAAIC,KAAJ,CAAU,4CAAV,CAAN;AACA,QAFD;AAGA;AACDE,cAAQJ,UAAR;AACA,MATD;;AAWAM,iBAAYW,OAAZ,GAAsB,UAACN,CAAD,EAAO;AAC5BO,cAAQC,GAAR,CAAYR,EAAEE,MAAF,CAASO,KAArB;AACAf,aAAOM,EAAEE,MAAF,CAASO,KAAT,CAAeC,IAAtB;AACA,MAHD;AAIA,KApBM,CAAP;AAqBA;AA5BF;AAAA;AAAA,qCA8B0B;AACxB,QAAIrB,UAAJ,EAAgB;AACfC;AACAD,kBAAa,IAAb;AACA;AACD;AAnCF;AAAA;AAAA,iCAqCsBsB,OArCtB,EAqC+B;AAC7BxB,WAAOyB,OAAP,CAAe,UAACC,KAAD,EAAW;AACzB,SAAIF,QAAQG,gBAAR,CAAyBC,QAAzB,CAAkCF,KAAlC,CAAJ,EAA8C;AAC7CF,cAAQK,iBAAR,CAA0BH,KAA1B;AACA;AACDF,aAAQM,iBAAR,CAA0BJ,KAA1B,EAAiC,EAAEK,eAAe,IAAjB,EAAjC;AACA,KALD;AAMA;AA5CF;;AAAA;AAAA;AA+CA,CAxDuB,EAAxB","file":"ConnectionFactory.js","sourcesContent":["var ConnectionFactory = (function () {\r\n\t\r\n\tconst dbName = \"aluraframe\";\r\n\tconst stores = [\"negociacoes\"];\r\n\tconst version = 4;\r\n\r\n\tvar connection = null;\r\n\tvar close = null;\r\n\r\n\treturn class ConnectionFactory {\r\n\r\n\t\tconstructor() {\r\n\t\t\tthrow new Error(\"Não é possível criar instâncias de ConnectionFactory\");\r\n\t\t}\r\n\r\n\t\tstatic getConnection() {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tlet openRequest = window.indexedDB.open(dbName, version);\r\n\r\n\t\t\t\topenRequest.onupgradeneeded = (e) => this._createStores(e.target.result);\r\n\r\n\t\t\t\topenRequest.onsuccess = (e) => {\r\n\t\t\t\t\tif (!connection) {\r\n\t\t\t\t\t\tconnection = e.target.result;\r\n\t\t\t\t\t\tclose = connection.close.bind(connection);\r\n\t\t\t\t\t\tconnection.close = function(){\r\n\t\t\t\t\t\t\tthrow new Error('Você não pode fechar diretamente a conexão')\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolve(connection);\r\n\t\t\t\t}\r\n\r\n\t\t\t\topenRequest.onerror = (e) => {\r\n\t\t\t\t\tconsole.log(e.target.error);\r\n\t\t\t\t\treject(e.target.error.name);\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tstatic closeConnection() {\r\n\t\t\tif (connection) {\r\n\t\t\t\tclose();\r\n\t\t\t\tconnection = null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tstatic _createStores(conexao) {\r\n\t\t\tstores.forEach((store) => {\r\n\t\t\t\tif (conexao.objectStoreNames.contains(store)) {\r\n\t\t\t\t\tconexao.deleteObjectStore(store);\r\n\t\t\t\t}\r\n\t\t\t\tconexao.createObjectStore(store, { autoIncrement: true });\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n})();"]}