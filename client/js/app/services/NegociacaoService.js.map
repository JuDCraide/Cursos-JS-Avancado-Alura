{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","get","then","negociacoes","map","Date","objeto","data","quantidade","valor","catch","Error","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","semanas","reduce","periodoTotal","semana","concat","negociacao","getConnection","connection","dao","adiciona","erro","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","equals","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService';\r\nimport {ConnectionFactory} from './ConnectionFactory';\r\nimport {NegociacaoDao} from '../dao/NegociacaoDao';\r\nimport {Negociacao} from '../models/Negociacao';\r\nexport class NegociacaoService {\r\n\r\n\tconstructor() {\r\n\t\tthis._http = new HttpService();\r\n\t}\r\n\r\n\tobterNegociacoesDaSemana() {\r\n\r\n\t\treturn this._http.get('negociacoes/semana')\r\n\t\t\t.then(negociacoes => negociacoes.map(\r\n\t\t\t\tobjeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)\r\n\t\t\t)).catch(erro => {\r\n\t\t\t\t//console.log(erro);\r\n\t\t\t\tthrow new Error('Não foi possível obter as negociações da semana do servidor.');\r\n\t\t\t});\r\n\t}\r\n\r\n\tobterNegociacoesDaSemanaAnterior() {\r\n\r\n\t\treturn this._http.get('negociacoes/anterior')\r\n\t\t\t.then(negociacoes => negociacoes.map(\r\n\t\t\t\tobjeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)\r\n\t\t\t)).catch(erro => {\r\n\t\t\t\t//console.log(erro);\r\n\t\t\t\tthrow new Error('Não foi possível obter as negociações da semana anterior do servidor.');\r\n\t\t\t});\r\n\t}\r\n\r\n\tobterNegociacoesDaSemanaRetrasada() {\r\n\r\n\t\treturn this._http.get('negociacoes/retrasada')\r\n\t\t\t.then(negociacoes => negociacoes.map(\r\n\t\t\t\tobjeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)\r\n\t\t\t)).catch(erro => {\r\n\t\t\t\t//console.log(erro);\r\n\t\t\t\tthrow new Error('Não foi possível obter as negociações da semana retrasada do servidor.');\r\n\t\t\t});\r\n\t}\r\n\r\n\tobterNegociacoes() {\r\n\t\treturn Promise.all([\r\n\t\t\tthis.obterNegociacoesDaSemana(),\r\n\t\t\tthis.obterNegociacoesDaSemanaAnterior(),\r\n\t\t\tthis.obterNegociacoesDaSemanaRetrasada()\r\n\t\t]).then(semanas =>\r\n\t\t\tsemanas.reduce((periodoTotal, semana) => periodoTotal.concat(semana), [])\r\n\t\t).catch(erro => {\r\n\t\t\t//console.log(erro);\r\n\t\t\tthrow new Error('Não foi possível obter as negociações do servidor.')\r\n\t\t});\r\n\t}\r\n\r\n\t\r\n\tcadastra(negociacao) {\r\n\t\treturn ConnectionFactory.getConnection()\r\n\t\t\t.then(connection => new NegociacaoDao(connection))\r\n\t\t\t.then(dao => dao.adiciona(negociacao))\r\n\t\t\t.then(() => 'Negociação incluida com sucesso')\r\n\t\t\t.catch(erro => {\r\n\t\t\t\t//console.log(erro);\r\n\t\t\t\tthrow new Error(erro);\r\n\t\t\t});\r\n\t}\r\n\r\n\tlista() {\r\n\t\treturn ConnectionFactory.getConnection()\r\n\t\t\t.then(connection => new NegociacaoDao(connection))\r\n\t\t\t.then(dao => dao.listaTodos())\r\n\t\t\t.catch(erro => {\r\n\t\t\t\t//console.log(erro);\r\n\t\t\t\tthrow new Error(erro);\r\n\t\t\t});\r\n\t}\r\n\r\n\tapaga() {\r\n\t\treturn ConnectionFactory.getConnection()\r\n\t\t\t.then(connection => new NegociacaoDao(connection))\r\n\t\t\t.then(dao => dao.apagaTodos())\r\n\t\t\t.then(() => 'Negociações apagadas com sucesso')\r\n\t\t\t.catch(erro => {\r\n\t\t\t\t//console.log(erro);\r\n\t\t\t\tthrow new Error(erro);\r\n\t\t\t});\r\n\t}\r\n\r\n\timporta(listaAtual) {\r\n\t\treturn this.obterNegociacoes()\r\n\t\t\t.then(negociacoes => negociacoes.filter(negociacao =>\r\n\t\t\t\t!listaAtual.some(negociacaoExistente => negociacao.equals(negociacaoExistente))\r\n\t\t\t)).catch(erro => {\r\n\t\t\t\t//console.log(erro);\r\n\t\t\t\tthrow new Error(erro);\r\n\t\t\t});\r\n\t}\r\n}"]}